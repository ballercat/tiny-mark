(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
  typeof define === 'function' && define.amd ? define(['exports'], factory) :
  (factory((global.tinyMark = {})));
}(this, (function (exports) { 'use strict';

  function parse(markdown, options) {
    var factory = options.factory;
    var TextEncoder = options.TextEncoder;
    var TextDecoder = options.TextDecoder;
    var memory = new WebAssembly.Memory({ initial: 1 });
    var view = new Uint8Array(memory.buffer);

    return factory({ env: { memory: memory, log: console.log }}).then(function(mod) {
      var instance = mod.instance;
      var uint8Array = new TextEncoder().encode(markdown);
      var offset = instance.exports.getOffsetStart();
      view.set(uint8Array, offset);

      var parserPtr = instance.exports.parse(offset, uint8Array.length);
      var start = instance.exports.getStart(parserPtr);
      var length = instance.exports.getLength(parserPtr);

      var decoder = new TextDecoder();

      return decoder.decode(memory.buffer.slice(start, start + length));
    });
  }

  var src = parse;

  var buffer = new ArrayBuffer(885);var uint8 = new Uint8Array(buffer);uint8.set([0,97,115,109,1,0,0,0,1,31,6,96,1,127,0,96,2,127,127,1,127,96,2,127,127,0,96,3,127,127,127,0,96,1,127,1,127,96,0,1,127,2,25,2,3,101,110,118,6,109,101,109,111,114,121,2,0,0,3,101,110,118,3,108,111,103,0,0,3,13,12,1,2,2,3,4,0,0,0,1,5,4,4,6,53,10,127,1,65,0,11,127,1,65,0,11,127,0,65,0,11,127,0,65,4,11,127,0,65,20,11,127,0,65,40,11,127,0,65,56,11,127,0,65,204,0,11,127,0,65,220,0,11,127,0,65,1,11,7,49,4,5,112,97,114,115,101,0,9,14,103,101,116,79,102,102,115,101,116,83,116,97,114,116,0,10,9,103,101,116,76,101,110,103,116,104,0,11,8,103,101,116,83,116,97,114,116,0,12,10,156,4,12,54,1,1,127,32,0,33,2,32,2,65,8,106,32,0,65,16,106,54,2,0,32,2,65,4,106,65,0,54,2,0,32,2,65,0,106,32,1,54,2,0,32,2,65,12,106,65,0,54,2,0,32,2,15,11,21,0,32,0,65,12,106,32,0,65,12,106,40,2,0,32,1,106,54,2,0,11,43,0,32,0,65,8,106,40,2,0,32,0,65,12,106,40,2,0,106,32,1,58,0,0,32,0,65,12,106,32,0,65,12,106,40,2,0,65,1,106,54,2,0,11,50,1,1,127,65,0,33,3,65,0,33,3,2,64,3,64,32,3,32,2,72,69,13,1,32,0,32,1,32,3,65,2,116,106,40,2,0,16,3,32,3,65,1,106,33,3,12,0,11,11,11,58,1,1,127,32,0,65,0,106,40,2,0,45,0,0,33,1,32,0,65,4,106,32,0,65,4,106,40,2,0,65,1,106,54,2,0,32,0,65,0,106,32,0,65,0,106,40,2,0,65,1,106,54,2,0,32,1,15,11,60,1,1,127,32,0,35,3,65,16,65,4,109,16,4,32,0,16,5,33,1,2,64,3,64,32,1,65,10,71,69,13,1,32,0,32,1,16,3,32,0,16,5,33,1,12,0,11,11,32,0,35,4,65,20,65,4,109,16,4,11,60,1,1,127,32,0,16,5,33,1,32,0,35,7,65,16,65,4,109,16,4,2,64,3,64,32,1,65,10,71,69,13,1,32,0,32,1,16,3,32,0,16,5,33,1,12,0,11,11,32,0,35,8,65,20,65,4,109,16,4,11,62,1,1,127,32,0,35,5,65,16,65,4,109,16,4,32,0,16,7,32,0,16,5,33,1,2,64,3,64,32,1,65,42,70,69,13,1,32,0,16,7,32,0,16,5,33,1,12,0,11,11,32,0,35,6,65,20,65,4,109,16,4,11,86,2,1,127,1,127,32,0,32,1,106,32,0,16,1,33,2,32,2,16,5,33,3,2,64,3,64,32,2,65,4,106,40,2,0,32,1,72,69,13,1,32,3,65,35,70,4,64,32,2,16,6,5,32,3,65,42,70,4,64,32,2,16,8,5,32,2,32,3,16,3,11,11,32,2,16,5,33,3,12,0,11,11,32,2,15,11,11,0,65,0,65,0,106,40,2,0,15,11,11,0,32,0,65,12,106,40,2,0,15,11,11,0,32,0,65,8,106,40,2,0,15,11,11,150,1,7,0,65,0,11,4,112,0,0,0,0,65,4,11,16,60,0,0,0,104,0,0,0,49,0,0,0,62,0,0,0,0,65,20,11,20,60,0,0,0,47,0,0,0,104,0,0,0,49,0,0,0,62,0,0,0,0,65,40,11,16,60,0,0,0,117,0,0,0,108,0,0,0,62,0,0,0,0,65,56,11,20,60,0,0,0,47,0,0,0,117,0,0,0,108,0,0,0,62,0,0,0,0,65,204,0,11,16,60,0,0,0,108,0,0,0,105,0,0,0,62,0,0,0,0,65,220,0,11,20,60,0,0,0,47,0,0,0,108,0,0,0,105,0,0,0,62,0,0,0,]);const {
    Module,
    instantiate,
    Memory,
    Table
  } = WebAssembly;

  const WebAssemblyModule = function(deps) {
    return instantiate(buffer, deps);
  };

  function parse$1(src$$1) {

    return src(src$$1, {
      factory: WebAssemblyModule,
      TextEncoder: TextEncoder,
      TextDecoder: TextDecoder
    });
  }

  exports.parse = parse$1;

  Object.defineProperty(exports, '__esModule', { value: true });

})));
